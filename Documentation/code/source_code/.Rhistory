# loading in packages
library(tidyverse)
library(stargazer)
library(plm)
# loading in data
tax_unemployment_data <- read_csv("../../data/analysis_data/full_project_data.csv")
# creating a log of the population variable
tax_unemployment_data <- tax_unemployment_data %>%
mutate(
log_population = log(population),
log_gdp = log(gdp),
log_unemp = log(avg_unemployment)
)
tax_unemployment_data <- as.data.frame(tax_unemployment_data)
numeric_data <- tax_unemployment_data %>%
select(where(is.numeric), -progressive_tax,
-population, -gdp, -log_unemp,
-year)
stargazer(
numeric_data,
summary = TRUE,
header = FALSE,
median = TRUE,
title = "Summary Statistics for Numeric Variables",
digits = 2
)
tax_unemployment_data %>% group_by(year) %>%
summarize(avg = mean(avg_unemployment)) %>%
ggplot(data = .,
mapping = aes(x = year,
y = avg)) +
geom_line() +
labs(title = "Average Unemployment Rate by Year",
y="Average Unemployment Rate",
x = "Year") +
theme_minimal()
tax_unemployment_data <- pdata.frame(tax_unemployment_data,
index = c("state", "year"))
tax.fe.reg <- plm(avg_unemployment ~
lag(avg_corp_income_tax, 1)+
minimum_wage +
log_gdp +
log_population,
data = tax_unemployment_data,
model = "within",
effect = "twoways")
# Running the Random effects model
tax.re.reg <- plm(avg_unemployment ~
lag(avg_corp_income_tax, 1)+
minimum_wage +
log_gdp +
log_population,
data = tax_unemployment_data,
model = "random",
effect = "twoways")
# hausman test
hausman_test <- phtest(tax.fe.reg, tax.re.reg)
hausman_stat <- hausman_test$statistic
hausman_df <- hausman_test$parameter
hausman_p <- "2.2e-16"
hausman_results <- data.frame(
"Test Statistic" = round(as.numeric(hausman_stat), 3),
"Degrees of Freedom" = hausman_df,
"P-Value" = hausman_p
)
stargazer(tax.fe.reg,
tax.re.reg,
summary = FALSE,
header = FALSE,
column.labels = c("FE", "RE"),
title = "Regression Results")
stargazer(
hausman_results,
summary = FALSE,
header = FALSE,
rownames = FALSE,
title = "Hausman Test Results"
)
rm(list = ls())
#library(tidyverse)
library(tidyr)
library(dplyr)
library(stargazer)
library(car)
library(knitr)
library(dagitty)
library(ggdag)
library(readr)
library(ggplot2)
#https://www.openintro.org/data/index.php?data=satgpa
satgpa.data <- read_csv("../Importable Data/satgpa.csv", col_names = TRUE, na = c("", "."))
sat.dag <- dagify(fy_gpa ~ sat_sum,
fy_gpa ~ sat_m,
fy_gpa ~ sat_v,
fy_gpa ~ sex,
fy_gpa ~ hs_gpa,
hs_gpa ~ sex,
hs_gpa ~~ sat_sum,
sat_v ~ sex,
sat_m ~ sex,
sat_sum ~ sex,
exposure = c("sat_sum"),
outcome = "fy_gpa"
)
#The code below sets the positions of the variables in the graph to make it look all pretty-like
coords<-list(x=c(sat_sum = 0, sat_m = 0, sat_v = 0, hs_gpa = .25, sex = .25,fy_gpa =1),
y=c(sat_sum = -1, sat_m = 1, sat_v = 0, hs_gpa = -.25, sex = .5, fy_gpa=0))
coords_df<-coords2df(coords)
coordinates(sat.dag)<-coords2list(coords_df)
## Now, use the function ggdag to plot your DAG model
ggdag(sat.dag, layout = "circle")
## Use this first code chunk to clear the memory and load your packages
## you could do this later, but I always like to do it at the beginning
rm(list = ls())
#library(xlsx)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
library(readr)
library(ggpubr)
data <- read.csv("../../Data/Analysis Data/Electric__Vehicles.csv")
vars <- c("State", "Year", "Emissions", "EVs_per_capita", "Electricity_Retail_Sales", "Population_Density_in_thousands", "Real_GDP_millions_of_chained_2017_dollars", "Per_capita_personal_income_dollars")
EV_data <- data %>%
mutate(lCO_2 = log(Emissions),
EVspercapita = (EVs_per_capita),
lElectricitySales = log(Electricity_Retail_Sales),
lPopDensity = log(Population_Density_in_thousands),
lGDP = log(Real_GDP_millions_of_chained_2017_dollars)) %>%
select(State, Year, lCO_2, EVspercapita, lElectricitySales, lPopDensity, lGDP)
#####    Summary stats for EVs dataset
#####    use the stargazer function
EV_data <- as.data.frame(EV_data)
stargazer(EV_data, header = FALSE)
###  Ignorant regression (Pooled OLS)
###  create dummies for year as factor variables
EV_data <- EV_data %>%
mutate(year_dum = factor(Year))
###  Run regression with all the dummies in it
POLS.reg <- lm(lCO_2 ~ EVspercapita + lElectricitySales + lPopDensity + lGDP,
data = EV_data)
###  Fixed Effects Model
fe.model <- lCO_2 ~ EVspercapita + lElectricitySales + lPopDensity + lGDP
fe.reg <- plm(fe.model,
data = EV_data,
model = "within",
effect = "twoways")
###  Random effects regression
re.model <- lCO_2 ~ EVspercapita + lElectricitySales + lPopDensity + lGDP
re.reg <- plm(re.model,
data = EV_data,
model = "random",
effect = "twoways")
##  Stargazer table
stargazer(POLS.reg, fe.reg, re.reg, keep.stat = c("n", "rsq"), header = FALSE,
keep = c("lCO_2", "EVspercapita", "lElectricitySales", "lPopDensity", "lGDP", "Constant"),
model.names = FALSE,
column.labels = c("POLS", "FE", "RE"),
add.lines = list(c("StateFE", "no", "yes", "no")))
rm(list = ls())
#library(tidyverse)
library(tidyr)
library(dplyr)
library(stargazer)
library(car)
library(knitr)
library(readr)
library(dagitty)
library(ggdag)
library(ggplot2)
###   load data
#remote.data <- read.csv("2021_rws.csv")
remote.data <- read.csv("rws_2021Updated.csv", fileEncoding = "UTF-8", stringsAsFactors = FALSE)
###   load data
#remote.data <- read.csv("2021_rws.csv")
remote.data <- read.csv("../../Data/Analysis Data/rws_2021Updated.csv", fileEncoding = "UTF-8", stringsAsFactors = FALSE)
rm(list = ls())
#library(tidyverse)
library(tidyr)
library(dplyr)
library(stargazer)
library(car)
library(knitr)
library(readr)
library(dagitty)
library(ggdag)
library(ggplot2)
###   load data
#remote.data <- read.csv("2021_rws.csv")
remote.data <- read.csv("../../Data/Analysis Data/rws_2021Updated.csv", fileEncoding = "UTF-8", stringsAsFactors = FALSE)
# Renaming variables, making dummy variables and making a more condensed dataframe
# Female, Metro/Regional
remoteCleaned.data <- remote.data %>%
mutate(female = ifelse(What.is.your.gender. == "Female", 1, 0)) %>%
mutate(management = ifelse(Do.you.manage.people.as.part.of.your.current.job. == "Yes", 1, 0)) %>%
rename(
productivity = This.question.is.about.your.productivity..Productivity.means.what.you.produce.for.each.hour.that.you.work..It.includes.the.amount.of.work.you.achieve.each.hour..and.the.quality.of.your.work.each.hour.....Please.compare.your.productivity.when.you.work.remotely.to.when.you.work.at.your.employer.s.workplace.....Roughly.how.productive.are.you..each.hour..when.you.work.remotely...,
birthYear = What.year.were.you.born.,
CommuteTime = Think.about.your.experience.this.year..On.a.day.when.you.attend.your.employer.s.workplace..how.many.hours.would.you.spend.doing.the.following.activities....For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Preparing.for.work.and.commuting,
inPersonWork = Think.about.your.experience.this.year..On.a.day.when.you.attend.your.employer.s.workplace..how.many.hours.would.you.spend.doing.the.following.activities....For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Working,
inPersonCare = Think.about.your.experience.this.year..On.a.day.when.you.attend.your.employer.s.workplace..how.many.hours.would.you.spend.doing.the.following.activities....For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Caring.and.domestic.responsibilities,
inPersonSleep = Think.about.your.experience.this.year..On.a.day.when.you.attend.your.employer.s.workplace..how.many.hours.would.you.spend.doing.the.following.activities....For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Sleep,
remoteWork = Think.about.your.experience.this.year..On.a.day.when.you.work.remotely..how.many.hours.would.you.spend.doing.the.following.activities...For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Working,                                                                        remoteCare = Think.about.your.experience.this.year..On.a.day.when.you.work.remotely..how.many.hours.would.you.spend.doing.the.following.activities...For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Caring.and.domestic.responsibilities,
remotePersonalTime = Think.about.your.experience.this.year..On.a.day.when.you.work.remotely..how.many.hours.would.you.spend.doing.the.following.activities...For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Personal.and.family.time,                                               remoteSleep = Think.about.your.experience.this.year..On.a.day.when.you.work.remotely..how.many.hours.would.you.spend.doing.the.following.activities...For.example..a.response.of..1..means.1.hour...A.response.of..0.5..means.half.an.hour....Your.responses.should.add.to.24.hours......Sleep
)
dataframeRemote <- remoteCleaned.data %>%
select(productivity, female, management, CommuteTime,
inPersonWork, inPersonCare, inPersonSleep, remoteWork, remoteCare, remoteSleep)
# Table 1
stargazer(dataframeRemote,type = "text",  title = "Table 1: Summary of Selected Variables")
# Basic Model
remote.reg = lm(productivity ~ female + CommuteTime + remoteWork + remoteCare + female:remoteCare + female:remoteWork, data = dataframeRemote)
remote2.reg = lm(productivity ~ female + CommuteTime + remoteWork + remoteCare , data = dataframeRemote)
# Table 2
stargazer(remote.reg, remote2.reg, type = "text", title = "Table 2: Regression Results")
# F-Test on interaction variables
linearHypothesis(remote.reg, c("female:remoteWork = 0", "female:remoteCare = 0"),test = "F")
